{"title":"apollo学习路径","uid":"58c1bf6ecb41acfadcd68abb30fef1e2","slug":"apollo学习路径","date":"2022-10-01T05:37:54.000Z","updated":"2023-08-24T12:47:35.679Z","comments":true,"path":"api/articles/apollo学习路径.json","keywords":null,"cover":"https://www.loliapi.com/acg/?id=8","content":"<h1 id=\"apollo-学习路径\"><a href=\"#apollo-学习路径\" class=\"headerlink\" title=\"apollo 学习路径\"></a>apollo 学习路径</h1><h2 id=\"必要知识点掌握\"><a href=\"#必要知识点掌握\" class=\"headerlink\" title=\"必要知识点掌握\"></a>必要知识点掌握</h2><h3 id=\"c-学习\"><a href=\"#c-学习\" class=\"headerlink\" title=\"c++ 学习\"></a>c++ 学习</h3><p><strong>前言：</strong> 因为Cyber使用的c++ 封装的api 并且在组件部分就已经没有Python实现了，所以学习c++ 还有有必要的，但是又不用全部学习下去。 后面的stl容器，用的也比较少。 以我目前的学习状况来看， 对模板的使用，只要知道怎么用就行了</p>\n<p>目前为止我们需要掌握基础的东西就行。了解c++ 基本的结构，以及类的相关要求就行</p>\n<h4 id=\"视频教程\"><a href=\"#视频教程\" class=\"headerlink\" title=\"视频教程\"></a>视频教程</h4><p>0基础我推荐黑马的c++ 教程 老师将的很详细，而且每隔一段时间就有案例。能够很好的总结自己目前阶段学习的成果</p>\n<p>哔哩哔哩 黑马官方教程 ： <a href=\"https://www.bilibili.com/video/BV1et411b73Z/?spm_id_from=333.337.search-card.all.click&vd_source=b7e1ff814885b361e6eabd7f6aece347\">黑马c++教程</a>  </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>前言： </p>\n<p>划分的时间不是固定的，学的快的可以多练习以下，学的慢的也可以放慢速度。遇到不会的东西都可以来问我。但是需要注意可以慢，但是不能慢太多不然后面的进度你跟不上。</p></blockquote>\n<p>第一部分： <a href=\"https://yuri2078.github.io/2022/09/25/C++%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/\">c++ 基础入门</a>  (学习时间 建议 3周 ) </p>\n<ol>\n<li><strong>第一周</strong>：第一节 -&gt; c++ 初识    - —  第四节 -&gt; 程序流程结构 （前面都比较简单，一周熟悉基本结构）</li>\n<li><strong>第二周</strong>：第五节 -&gt; 数组           —– 第六节 -&gt; 函数 （数组和函数是基本的东西，在后续的学习中经常使用）</li>\n<li><strong>第三周</strong>：第七节 -&gt; 指针           —– 第八节 -&gt; 结构体 (指针很重要，不用学习的特别花哨，但是需要掌握 )</li>\n<li><strong>总结</strong> ： 三周时间，掌握基础的结构，理解c++ 的基本数据类型 前面也基本都是c语言的内容，有基础学习起来也特别快。 这三周要做的事情是熟练掌握基本结构，能够使用c++ 解决一些基本的问题。</li>\n<li><strong>课程对应</strong> 哔哩哔哩视频 1 - 72节</li>\n<li><strong>学习要求</strong>： 能够独立完成 视频 73 节的通讯录管理系统项目</li>\n</ol>\n<p>第二部分:   <a href=\"https://yuri2078.github.io/2022/09/25/C++%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/\">c++ 核心编程</a>  （学习时间 建议 5 周 ）</p>\n<ol>\n<li><strong>前言：</strong>这里是 c++ 的核心编程是非常重要的部分。也是c++ 的核心以及灵魂所在。是必须要重点掌握的地方</li>\n<li><strong>第四周</strong>：第一节 -&gt; 内存分区模型 —- 第三节 -&gt; 函数提高 (看着多，其实需要掌握的地方不多)</li>\n<li><strong>第五周</strong> :  第四节 : 4.1 封装  —-  4.2 对象的初始化和清理 （第一周先要熟练掌握对象的基本结构、构造、析构）</li>\n<li><strong>第六周</strong> :  第四节:  4.3 c++对象模型和this指针 —- 4.5 运算符重载 （这里看着多需要掌握的不多更多是理解）</li>\n<li><strong>第七周</strong>： 第四节: 4.6 继承 （需要重点掌握，花一周时间好好理解。 不要跟着敲出来就觉得会了。多自己写写）</li>\n<li><strong>第八周</strong> :  第四节 :  4.7多态  （需要重点掌握，花一周时间好好理解。 不要跟着敲出来就觉得会了。多自己写写）</li>\n<li><strong>总结</strong>： 这一部分面向对象核心编程，是属于c++ 核心的地方。一定要好好学习。 其中 第四周 更多是了解，不要看到源代码不知道是什么意思。第五周封装 和实例化对象则是以后开发绕不开的东西。 对一个类的基本了解和基本使用是必须要掌握的。 后面第六周的运算符重载不用每个都看。重点掌握怎么重载，以及重载 &lt;&lt; 这种符号时需要传入的是引用。别的大概理解就行。</li>\n<li><strong>对应哔哩哔哩视频</strong>的 84 -184节</li>\n<li><strong>学习要求</strong> : 熟练掌握类的 创建 析构 拷贝 继承 多态</li>\n</ol>\n<p><strong>总结 ：</strong> <strong>总结</strong>：这个视频看到 184 节 模板-类模板案例-封装 这一节就行了，后面的stl容器，可以先不用看。中途提到的对于文件的操作也可以选择不看。 学完这两个部分，对于c++ 的基础核心语法，已经算是掌握了。</p>\n<h4 id=\"书籍教程\"><a href=\"#书籍教程\" class=\"headerlink\" title=\"书籍教程\"></a>书籍教程</h4><ol>\n<li><p>c++ prime plus 中文版第六版 电子版 链接: <a href=\"https://pan.baidu.com/s/1WXc_hfJhJKL4c8InAVXHMg\">https://pan.baidu.com/s/1WXc_hfJhJKL4c8InAVXHMg</a>  提取密码: cg2f</p>\n</li>\n<li><p>GitHub 学习 大佬写的c++ prime plus 原书代码和解答 <a href=\"https://github.com/ShujiaHuang/Cpp-Primer-Plus-6th\">GitHub</a> 可能需要梯子</p>\n</li>\n</ol>\n<p><strong>提前了解：</strong> 因为apollo 是构建在docker容器当中，所以需要了解基础的linux命令。 打开Ubuntu 然后按住 Ctrl +  Alt + t</p>\n<p>就能打开终端。 终端就是输入linux命令的地方。后续提到的指令都是在这里面输入。 </p>\n<p>打开终端输入 pwd 查看当前目录 一般是 &#x2F;home&#x2F; {你的用户名} linux是多用户多任务的。 home 目录用来存放各个用户的数据， 每个用户都有自己的目录文件夹，互不干扰。但是他们共享 基本的linux文件 也就是除了home目录以外的东西</p>\n<p>比如 存放可执行文件的bin 目录 &#x2F;usr&#x2F;bin&#x2F; </p>\n<h3 id=\"熟悉linux-常用-基础-的指令\"><a href=\"#熟悉linux-常用-基础-的指令\" class=\"headerlink\" title=\"熟悉linux 常用&#x2F;基础 的指令\"></a>熟悉linux 常用&#x2F;基础 的指令</h3><h4 id=\"常用指令掌握\"><a href=\"#常用指令掌握\" class=\"headerlink\" title=\"常用指令掌握\"></a>常用指令掌握</h4><ul>\n<li><p><strong>pwd</strong>（英文全拼：print work directory） 命令用于显示工作目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#用法 pwd 就行\n\n&gt; pwd #查看目前所在目录\n&#x2F;home&#x2F;yuri</code></pre>\n</li>\n<li><p><strong>ls</strong>  — list directory contents 命令用于显示指定工作目录下之内容（列出目前工作目录所含之文件及子目录)。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#用法 ls 【目录名】 不加参数则默认当前目录 \n# ls 查看当前目录\n# ls &#x2F;home 查看&#x2F;home 目录\n\n&gt; ls #输入ls 查看当前目录下所有（非隐藏）文件 展示出来的东西就是当前目录下所有东西了\nDesktop    Downloads  Pictures  Templates  apollo  images  myPacket      vimrc\nDocuments  Music      Public    Videos     blog    miku    packettracer  yuri\n</code></pre>\n</li>\n<li><p><strong>cd</strong>  （英文全拼：change directory）命令用于切换当前工作目录。 </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#用法 cd [目录名] cd .. linux中 用 . 表示当前目录 用.. 表示上级目录\n# cd &#x2F;home&#x2F;yuri 进入&#x2F;home&#x2F;yuri目录\n# cd .. 进入上级目录\n\n&gt; pwd #输入pwd查看当前目录 是 &#x2F;home&#x2F;yuri\n&#x2F;home&#x2F;yuri\n\n&gt; ls #输入ls 查看目录下有哪些文件 我们以进入Musi文件为例\nDesktop    Downloads  Pictures  Templates  apollo  images  myPacket      vimrc\nDocuments  Music      Public    Videos     blog    miku    packettracer  yuri\n\n&gt; cd Music #cd music 进入music文件夹       \n\n&gt; pwd #输入 pwd 查看当前是不是在 &#x2F;home&#x2F;yuri 下的 Music 文件夹里\n&#x2F;home&#x2F;yuri&#x2F;Music\n</code></pre>\n</li>\n<li><p><strong>cp</strong>（英文全拼：copy file）命令主要用于复制文件或目录 加上 -rf 复制一整个文件夹</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 用法 cp  [文件1] [复制新文件的名字] (不加目录默认当前目录) 以下操作仅仅对文件，文件夹需要加参数 -rf\n# cp file file2 复制当前目录下的file文件到当前目录下，并且命名为file2\n# cp file &#x2F;home&#x2F;yuri&#x2F;file2 复制当前目录下的file文件到&#x2F;home&#x2F;yuri目录下，并且命名为file2\n\n&gt; ls            #输入ls查看当前目录下有什么 发现有一个文件 一个文件夹\n\nCloudMusic  神话.flac\n&gt; ls CloudMusic  #查看这个文件夹里有什么？  发现什么都没有     \n          \n&gt; cp 神话.flac CloudMusic  #将当前目录下的神话.flac 复制到 CloudMusic \n             \n&gt; ls CloudMusic  #查看文件夹下面是不是已经有文件了  发现已经有了\n\n神话.flac\n\n# cp -rf [文件夹名字] [新文件夹名字]\n\n&gt; cp -rf CloudMusic CloudMusic_cp #复制cloudmusic 文件夹 并命名成cloudmusic_cp\n\n&gt; ls #\nCloudMusic  CloudMusic_cp  神话.flac\n</code></pre>\n</li>\n<li><p><strong>mv</strong> 和上面 cp 命令使用情况基本一样 在对文件夹使用时 可以不用加 -rf 参数</p>\n</li>\n<li><p><strong>.&#x2F;</strong>  执行可执行文件 输入 .&#x2F;可执行文件名字 即可执行一个可执行文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&gt; ls\nhello  hello.cpp \n# 使用g++ 将hello.cpp 编译为一个可执行文件 hello （linux 可执行文件一般没有后缀，不像win 的 .exe）\n\n&gt; .&#x2F;hello    #执行可执行文件      \nhello world</code></pre>\n</li>\n<li><p><strong>mkdir</strong> make directories 的缩写，用于创建新目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&gt; ls  #查看文件下文件\nhello  #只有一个hello文件夹\n&gt; mkdir hhh #新建hhh 目录\n&gt;ls\nhello hhh #再次查看发现有了\n\n# 注意： 新建的目录必要存在 比如mkdir hhh&#x2F;test_1&#x2F;test_2 如果中间 test_1 不存在就会报错\n\nmkdir -p hhh&#x2F;test_1&#x2F;test_2 递归创建目录 即使test_1 不存在</code></pre>\n</li>\n<li><p><strong>clear</strong> 清空终端的命令 </p>\n</li>\n<li><p><strong>sudo</strong> 暂时获取root权限命令</p>\n</li>\n<li><p>待补充</p>\n</li>\n</ul>\n<h3 id=\"bazel-的使用\"><a href=\"#bazel-的使用\" class=\"headerlink\" title=\"bazel 的使用\"></a>bazel 的使用</h3><h3 id=\"参考-以及后续学习\"><a href=\"#参考-以及后续学习\" class=\"headerlink\" title=\"参考 以及后续学习\"></a>参考 以及后续学习</h3><p><a href=\"https://www.runoob.com/linux/linux-command-manual.html\">菜鸟教程： linux命令</a></p>\n<h1 id=\"正式开始学习\"><a href=\"#正式开始学习\" class=\"headerlink\" title=\"正式开始学习\"></a>正式开始学习</h1><p>​\t</p>\n","text":"apollo 学习路径必要知识点掌握c++ 学习前言： 因为Cyber使用的c++ 封装的api 并且在组件部分就已经没有Python实现了，所以学习c++ 还...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"apollo","slug":"apollo","count":9,"path":"api/categories/apollo.json"}],"tags":[{"name":"apollo","slug":"apollo","count":12,"path":"api/tags/apollo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#apollo-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">apollo 学习路径</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BF%85%E8%A6%81%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8E%8C%E6%8F%A1\"><span class=\"toc-text\">必要知识点掌握</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#c-%E5%AD%A6%E4%B9%A0\"><span class=\"toc-text\">c++ 学习</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B\"><span class=\"toc-text\">视频教程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B9%A6%E7%B1%8D%E6%95%99%E7%A8%8B\"><span class=\"toc-text\">书籍教程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%86%9F%E6%82%89linux-%E5%B8%B8%E7%94%A8-%E5%9F%BA%E7%A1%80-%E7%9A%84%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">熟悉linux 常用&#x2F;基础 的指令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E6%8E%8C%E6%8F%A1\"><span class=\"toc-text\">常用指令掌握</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#bazel-%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">bazel 的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83-%E4%BB%A5%E5%8F%8A%E5%90%8E%E7%BB%AD%E5%AD%A6%E4%B9%A0\"><span class=\"toc-text\">参考 以及后续学习</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%BC%8F%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0\"><span class=\"toc-text\">正式开始学习</span></a></li></ol>","author":{"name":"yuri2078","slug":"blog-author","avatar":"https://www.loliapi.com/acg/pp/","link":"/","description":"一名与世无争的百合控!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"apollo_github版本配置","uid":"8fb19d80ddcd0356e241a041c1f55c1c","slug":"apollo-github","date":"2022-10-22T06:48:14.000Z","updated":"2023-08-25T02:46:47.588Z","comments":true,"path":"api/articles/apollo-github.json","keywords":null,"cover":"https://www.loliapi.com/acg/?id=6","text":" 来源 : apollo 官方 github参考 : apollo profile操作方法 克隆 apollo 仓库一般建议克隆在home目录就行 git cl...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"apollo","slug":"apollo","count":9,"path":"api/categories/apollo.json"}],"tags":[{"name":"apollo","slug":"apollo","count":12,"path":"api/tags/apollo.json"},{"name":"教程","slug":"教程","count":6,"path":"api/tags/教程.json"}],"author":{"name":"yuri2078","slug":"blog-author","avatar":"https://www.loliapi.com/acg/pp/","link":"/","description":"一名与世无争的百合控!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"cyber RT 开发教程","uid":"9d467d8176371f5545251578b9100d29","slug":"cyber","date":"2022-09-17T10:32:01.587Z","updated":"2023-08-25T02:53:20.522Z","comments":true,"path":"api/articles/cyber.json","keywords":null,"cover":"https://www.loliapi.com/acg/?id=16","text":"apollo Cyber c++ 实现 前言： 本文是基于赵老师的视频：CyberRT教程 ，文中所有东西都是基于arch + vscode 1.72 建议： ...","link":"","photos":[],"count_time":{"symbolsCount":"44k","symbolsTime":"40 mins."},"categories":[{"name":"apollo","slug":"apollo","count":9,"path":"api/categories/apollo.json"}],"tags":[{"name":"apollo","slug":"apollo","count":12,"path":"api/tags/apollo.json"},{"name":"教程","slug":"教程","count":6,"path":"api/tags/教程.json"}],"author":{"name":"yuri2078","slug":"blog-author","avatar":"https://www.loliapi.com/acg/pp/","link":"/","description":"一名与世无争的百合控!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}