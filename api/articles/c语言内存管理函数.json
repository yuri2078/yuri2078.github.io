{"title":"c语言内存管理函数","uid":"c1066c6c67d738c454c0adc022f5b3f1","slug":"c语言内存管理函数","date":"2021-12-20T12:04:01.960Z","updated":"2021-12-23T12:02:16.216Z","comments":true,"path":"api/articles/c语言内存管理函数.json","keywords":null,"cover":"https://www.loliapi.com/acg/?id=12","content":"<p>以下函数均包含在stdlib.h头文件中</p>\n<p>void *malloc()<br>    1. 向系统申请 个字节的空间，并返回指向该空间的指针<br>    2. 返回的是void空指针，需要转换类型使用。无初值<br>    3. 返回失败返回NULL。</p>\n<p>void free(指针)             释放我们申请的空间。它没有返回值</p>\n<p>因为返回的地址是void类型，所以我们需要强制类型转换</p>\n<pre><code><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main(void)\n&#123;\n    int *p;\n    &#x2F;&#x2F;定义整形指针\n    p &#x3D; (int *)malloc(sizeof(int));\n    &#x2F;&#x2F;分配int字节的空间并把地址返回给p\n    if (p &#x3D;&#x3D; NULL)\n    &#123;\n        printf(&quot;分配失败 ! &quot;);\n        &#x2F;&#x2F;分配失败就终止程序\n        exit(1);\n    &#125;\n    printf(&quot;请输入一个数: &quot;);\n    scanf(&quot;%d&quot;, p);\n    printf(&quot;我们输入的数是 %d \\n&quot;, *p);\n    free(p);\n    &#x2F;&#x2F;释放我们申请的空间\n    return 0;\n&#125;</code></pre>\n</code></pre>\n<p>内存泄漏问题 很危险就对了</p>\n<p>分配一个数组</p>\n<pre><code><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main(void)\n&#123;\n    int *p &#x3D; NULL;\n    p &#x3D; (int *)malloc(8 * sizeof(int));\n    for (int i &#x3D; 0; i &lt; 8;i++)\n    &#123;\n        scanf(&quot;%d&quot;, p + i);\n        printf(&quot;%d  &quot;, *(p + i));\n    &#125;\n    free(p);\n    return 0;\n&#125;\n</code></pre>\n</code></pre>\n<p>memset(p, 0, size);  &#x2F;&#x2F;包含于string.h  中<br>将p指向的size大小的空间初始化为0</p>\n<p>calloc(number,size);<br>申请number * size个空间并把他们初始化为0</p>\n<p>memcpy(p1,p2,n);  将n个数据从p2中拷贝到p1中</p>\n","text":"以下函数均包含在stdlib.h头文件中 void *malloc() 1. 向系统申请 个字节的空间，并返回指向该空间的指针 2. 返回的是void空指针，需...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"c/c++","slug":"c-c","count":9,"path":"api/categories/c-c.json"}],"tags":[{"name":"c/c++","slug":"c-c","count":9,"path":"api/tags/c-c.json"}],"toc":"","author":{"name":"yuri2078","slug":"blog-author","avatar":"https://www.loliapi.com/acg/pp/","link":"/","description":"一名与世无争的百合控!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"c++的输入输出","uid":"50604dfa48ccad311782bbc66ef231c6","slug":"c++的输入输出","date":"2022-03-04T15:00:41.516Z","updated":"2022-04-03T04:52:01.334Z","comments":true,"path":"api/articles/c++的输入输出.json","keywords":null,"cover":"https://www.loliapi.com/acg/?id=9","text":"cerr 和 clog 用于特定场合的输出c++中仍然可以使用c语言的printf 和 scanf 但是c++新增了cin 和 cout cin 输入流1 ci...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"c/c++","slug":"c-c","count":9,"path":"api/categories/c-c.json"}],"tags":[{"name":"c/c++","slug":"c-c","count":9,"path":"api/tags/c-c.json"}],"author":{"name":"yuri2078","slug":"blog-author","avatar":"https://www.loliapi.com/acg/pp/","link":"/","description":"一名与世无争的百合控!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"c语言链表","uid":"e711e115c4d04e8fd1bc13f673ce3ea8","slug":"c语言链表","date":"2021-12-20T10:32:01.587Z","updated":"2021-12-23T12:01:39.846Z","comments":true,"path":"api/articles/c语言链表.json","keywords":null,"cover":"https://www.loliapi.com/acg/?id=11","text":"单链表组成： |信息域|指针域| 单链表一般由 信息域 和 指针域 构成 链表的增加 删除 链表练习题 均使用头插法 1 制作同学数据录入表 #include ...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"c/c++","slug":"c-c","count":9,"path":"api/categories/c-c.json"}],"tags":[{"name":"c/c++","slug":"c-c","count":9,"path":"api/tags/c-c.json"}],"author":{"name":"yuri2078","slug":"blog-author","avatar":"https://www.loliapi.com/acg/pp/","link":"/","description":"一名与世无争的百合控!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}